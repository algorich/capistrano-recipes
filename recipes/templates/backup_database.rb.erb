##
# Backup Generated: db_backup
# Once configured, you can run the backup with the following command:
#
# $ backup perform -t db_backup [-c <path_to_configuration_file>]
#
# For more information about Backup's components, see the documentation at:
# http://meskyanichi.github.io/backup
#

database_yml = File.open('<%= current_path %>/config/database.yml')
RAILS_ENV    = ENV['RAILS_ENV'] || 'development'

require 'yaml'
config = YAML.load_file(database_yml)

Model.new(:db_backup, 'Description for db_backup') do

  ##
  # MySQL [Database]
  #
  database MySQL do |db|
    # To dump all databases, set `db.name = :all` (or leave blank)
    db.name               = config[RAILS_ENV]["database"]
    db.username           = config[RAILS_ENV]["username"]
    db.password           = config[RAILS_ENV]["password"]
    db.host               = config[RAILS_ENV]["host"]
    db.port               = config[RAILS_ENV]["port"]
    db.socket             = config[RAILS_ENV]["socket"]
    # Note: when using `skip_tables` with the `db.name = :all` option,
    # table names should be prefixed with a database name.
    # e.g. ["db_name.table_to_skip", ...]
    db.skip_tables        = []
    db.only_tables        = []
    db.additional_options = ["--quick", "--single-transaction"]
  end

  store_with RSync do |storage|
    storage.mode = :ssh
    storage.host = '<%= backup_host %>'
    storage.port = <%= backup_port %>
    storage.ssh_user = '<%= backup_user %>'
    storage.compress = true

    time = Time.now
    if time.day == 1  # first day of the month
      # store a monthly
      path = time.strftime('%B').downcase             # January, February, etc...
    elsif time.sunday?
      # store a weekly
      path = "weekly_#{time.day / 7 + 1}".downcase # Weekly_1 thru Weekly_5
    else
      # store a daily
      path = time.strftime('%A').downcase             # Monday thru Saturday
    end
    storage.path = "~/backups/asmelhoresofertas/database/#{ path }"
  end

  ##
  # Gzip [Compressor]
  #
  compress_with Gzip

end
